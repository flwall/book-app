####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/book-api-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/book-api-jvm
#
###
#FROM fabric8/java-alpine-openjdk8-jre:1.6.5
#ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"
#ENV AB_ENABLED=jmx_exporter

# Be prepared for running in OpenShift too
# RUN adduser -G root --no-create-home --disabled-password 1001 \
 # && chown -R 1001 /deployments \:q

  #&& chmod -R "g+rwX" /deployments \
  #&& chown -R 1001:root /deployments

# COPY build/lib/* /deployments/lib/
# COPY build/*-runner.jar /deployments/app.jar
# EXPOSE 8080

# run with user 1001
# USER 1001

FROM quay.io/quarkus/centos-quarkus-maven:19.2.1 AS mvn
# RUN mkdir /app
COPY . /app
WORKDIR /app

USER root
RUN chown -R quarkus /app
USER quarkus
RUN mvn package

# ENTRYPOINT [ "/deployments/run-java.sh" ]
FROM openjdk:8-jre-slim
#RUN mkdir -p /app/target
COPY --from=mvn /app/target/lib /app/target/lib
COPY --from=mvn /app/target/*runner.jar /app/target
RUN mv /app/target/*runner.jar /app/target/runner.jar

EXPOSE 8080
RUN ls -la /app/target/
CMD ["java", "-jar", "/app/target/runner.jar"]